"use strict";

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactD3Core = require('react-d3-core');

var _reactD3Basic = require('react-d3-basic');

var _inheritIndex = require('./inherit/index');

var _inheritIndex2 = _interopRequireDefault(_inheritIndex);

var _utilsBrush = require('./utils/brush');

var _utilsBrush2 = _interopRequireDefault(_utilsBrush);

var _utilsBrush_focus = require('./utils/brush_focus');

var _utilsBrush_focus2 = _interopRequireDefault(_utilsBrush_focus);

var AreaStackBrush = (function (_BrushSet) {
  _inherits(AreaStackBrush, _BrushSet);

  function AreaStackBrush(props) {
    _classCallCheck(this, AreaStackBrush);

    _get(Object.getPrototypeOf(AreaStackBrush.prototype), 'constructor', this).call(this, props);

    var _props = this.props;
    var margins = _props.margins;
    var brushHeight = _props.brushHeight;
    var width = _props.width;
    var height = _props.height;

    var brushMargins = this.props.brushMargins || { top: 30, right: margins.right, bottom: 30, left: margins.left };
    var yBrushRange = this.props.yBrushRange || [brushHeight - brushMargins.top - brushMargins.bottom, 0];
    var xDomain = this.mkXDomain();
    var yDomain = this.mkYDomain(true);

    this.state = {
      xRange: this.props.xRange || [0, width - margins.left - margins.right],
      yRange: this.props.yRange || [height - margins.top - margins.bottom, 0],
      xRangeRoundBands: this.props.xRangeRoundBands || { interval: [0, width - margins.left - margins.right], padding: .1 },
      brushMargins: brushMargins,
      yBrushRange: yBrushRange,
      xDomainSet: xDomain,
      yDomainSet: yDomain
    };
  }

  _createClass(AreaStackBrush, [{
    key: 'render',
    value: function render() {
      var xDomainSet = this.state.xDomainSet;

      var chartSeriesData = (0, _reactD3Basic.series)(this.props);

      var focus = _react2['default'].createElement(_utilsBrush_focus2['default'], this.props);
      var brush = _react2['default'].createElement(_utilsBrush2['default'], _extends({ xDomain: this.setXDomain, yDomain: this.setYDomain }, this.props, this.state, { brushType: 'area_stack', chartSeriesData: chartSeriesData, setDomain: this.setDomain.bind(this) }));

      return _react2['default'].createElement(
        'div',
        null,
        _react2['default'].createElement(
          _reactD3Core.Chart,
          this.props,
          _react2['default'].createElement(_reactD3Basic.AreaStackChart, _extends({}, this.props, { xDomain: xDomainSet, showBrush: true })),
          focus
        ),
        brush
      );
    }
  }]);

  return AreaStackBrush;
})(_inheritIndex2['default']);

exports['default'] = AreaStackBrush;
module.exports = exports['default'];