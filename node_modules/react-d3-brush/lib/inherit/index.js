'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactD3Core = require('react-d3-core');

var _commonProps = require('../commonProps');

var _commonProps2 = _interopRequireDefault(_commonProps);

"use sctrict";

var BrushSet = (function (_Component) {
  _inherits(BrushSet, _Component);

  function BrushSet(props) {
    _classCallCheck(this, BrushSet);

    _get(Object.getPrototypeOf(BrushSet.prototype), 'constructor', this).call(this, props);
  }

  _createClass(BrushSet, [{
    key: 'mkXDomain',
    value: function mkXDomain() {
      return this.setXDomain = (0, _reactD3Core.xDomainCount)(this.props);
    }
  }, {
    key: 'mkYDomain',
    value: function mkYDomain(stack) {
      return this.setYDomain = (0, _reactD3Core.yDomainCount)(this.props, stack);
    }
  }, {
    key: 'setDomain',
    value: function setDomain(axis, val) {
      var _props = this.props;
      var xScale = _props.xScale;
      var xRange = _props.xRange;
      var xDomain = _props.xDomain;
      var xRangeRoundBands = _props.xRangeRoundBands;
      var yScale = _props.yScale;
      var yRange = _props.yRange;
      var yDomain = _props.yDomain;
      var yRangeRoundBands = _props.yRangeRoundBands;

      if (axis === 'x') {

        var xScaleChange = {
          scale: xScale,
          range: xRange,
          domain: val,
          rangeRoundBands: xRangeRoundBands
        };

        // set x scale
        this.setState({
          xDomainSet: val,
          xScaleSet: (0, _reactD3Core.scale)(xScaleChange)
        });
      } else if (axis === 'y') {

        var yScaleChange = {
          scale: yScale,
          range: yRange,
          domain: val,
          rangeRoundBands: yRangeRoundBands
        };

        // set y scale
        this.setState({
          yDomainSet: val,
          yScaleSet: (0, _reactD3Core.scale)(yScaleChange)
        });
      }
    }
  }], [{
    key: 'defaultProps',
    value: _commonProps2['default'],
    enumerable: true
  }, {
    key: 'propTypes',
    value: {
      data: _react.PropTypes.array.isRequired,
      chartSeries: _react.PropTypes.array.isRequired,
      width: _react.PropTypes.number,
      height: _react.PropTypes.number,
      x: _react.PropTypes.func,
      xDomain: _react.PropTypes.array,
      xRange: _react.PropTypes.array,
      xScale: _react.PropTypes.string,
      xRangeRoundBands: _react.PropTypes.object,
      y: _react.PropTypes.func,
      yDomain: _react.PropTypes.array,
      yRange: _react.PropTypes.array,
      yScale: _react.PropTypes.string,
      brushMargins: _react.PropTypes.object,
      brushHeight: _react.PropTypes.number,
      yBrushRange: _react.PropTypes.array
    },
    enumerable: true
  }]);

  return BrushSet;
})(_react.Component);

exports['default'] = BrushSet;
module.exports = exports['default'];